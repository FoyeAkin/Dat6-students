str(mat)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
setwd("~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data")
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
bystate<-split(data,data$State)
states<-factor(data$State)
outcome[,col]=as.double(outcome[,col])
col<-23
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
bystate<-split(data,data$State)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
data$Rank<-1:length(data$State)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
data$Rank<-1:length(data$State)
bystate<-split(data,data$State)
states<-factor(data$State)
data
View(data)
submit()
help(lapply)
data$Rank<-lappy(data$State,function{1:length(x)})
data$Rank<-lappy(data$State,function(rank) 1:length(rank))
data$Rank<-lapply(data$State,function(rank) 1:length(rank))
View(data)
data$Rank<-lapply(data$State,function(data$State) 1:length(data$State))
data$Rank<-lapply(data$State,function(data) 1:length(data$State))
data$Rank<-lapply(data$State,function(data) 1:length(data[:,1]))
data$Rank<-lapply(data$State,function(data) 1:length(data[]))
View(data)
data$Rank<-lapply(data$State,"mike")
data$Rank<-lapply(data$State,function(mike) "mike")
View(data)
data$Rank<-lapply(data$State,function(1) length(data))
data$Rank<-lapply(data$State,function(data) length(data))
View(data)
help(count)
help(length)
length(data$State)
lapply(data$State,length(data$State))
lapply(data$State,length())
lapply(data$State,length
lapply(data$State,length)
lapply(data$State,mean)
lapply(data$State,mean,ra.nm=FALSE)
lapply(data$State,mean,ra.nm=TRUE)
lapply(data$State,mean,rm.na=TRUE)
tapply(data$state,function(data) length(data))
help(tapply)
tapply(data$Rank,data$State,function(data) length(data))
View(data)
View(data)
tapply(data$try,data$State,function(data) length(data))
data$Rank<-1
View(data)
data$Rank<-tapply(data$try,data$State,function(data) 1:length(data))
data$Rank<-tapply(data$try,data$State,function(data) length(data))
help(lapply)
lapply(data$Rank,function(data) length(data))
lapply(data$State,function(data) length(data))
lapply(split(data$State,data$Rank),function(data) length(data))
lapply(split(data$Rank,data$State),function(data) length(data))
states<-factor(data$State)
states
help(sum)
help(count)
help(apply)
transform(data,
State.rank = ave(count, year,
FUN = function(x) rank(-x, ties.method = "first")))
transform(data,
State.rank = ave(count, State,
FUN = function(x) rank(-x, ties.method = "first")))
transform(data,
State.rank = ave(Rate, State,
FUN = function(x) rank(-x, ties.method = "first")))
View(data)
data$Rank<-transform(data,
State.rank = ave(Rate, State,
FUN = function(x) rank(-x, ties.method = "first")))
View(data)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
transform(dat, x= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
transform(data, x= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
View(data)
data<-transform(data, x= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
col<-11
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
data<-data[order(data$State, -data$Rate, data$Hospital.Name),]
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=F)))
data<-data[order(data$State, -data$Rate, data$Hospital.Name),]
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=F)))
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
data<-transform(data, Rank= ave(State,Rate,FUN=function(x) order(x,decreasing=F)))
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
View(data)
help(ave)
data<-transform(data, Rank= ave(State,Rate,FUN=function(x) order(x,decreasing=F)))
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=F)))
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
data$Rank<-1
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data<-data[complete.cases(data),]
source('~/.active-rstudio-document', echo=TRUE)
data$Rank<-1
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
View(data)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
r<-rank
outcome[,col]=as.double(outcome[,col])
data<-data[complete.cases(data),]
data$Rank<-1
View(data)
data<-data[complete.cases(data),]
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
outcome[,col]=as.double(outcome[,col])
outcome.Rate=as.double(outcome[,col])
data<-data[complete.cases(data),]
data$Rank<-1
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome[,col]=as.double(outcome[,col])
outcome$Rate=as.double(outcome$Rate)
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
choices<-c("heart attack","heart failure", "pneumonia")
rankchoices<-c("best","worst")
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
outcome[,col]=as.double(outcome[,col])
data<-data.frame(Hospital.Name=outcome$Hospital.Name,State=outcome$State,Rate=outcome[,col],row.names = NULL)
data$Rate=as.double(data$Rate)
data<-data[complete.cases(data),]
View(data)
data$Rank<-1
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=F)))
View(data)
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
View(data)
min(data$Rate[data$State=="AL"])
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
View(data)
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=T)))
View(outcome)
View(data)
data<-data[order(data$State, data$Rate, data$Hospital.Name),]
data<-transform(data, Rank= ave(Rate,State,FUN=function(x) order(x,decreasing=F)))
View(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
rank=NULL
rank==NULL
[rank==NULL]
rank=="NULL""
rank=="NULL"
is.null(rank)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack")
rankall("heart attack",1)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",1)
data
data[rank==1]
data[Rank==1]
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
View(data)
data[data$Rank==1]
data$Rank
data$Rank==1
data[data$Rank==1]
data[data$Rank==1,]
data<<-data[Rank==r,]
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack",1)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
help(tapply)
tapply(data$Rank,data$State,max)
q<-tapply(data$Rank,data$State,max)
q
class(q)
q$AK
q['AK']
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
q<-tapply(data$Rank,data$State,max)
rankall("heart attack",1)
rankall("heart attack","best")
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
levels(data$States)
level(data$States)
levels(data$State)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
data
head(Data)
head(data)
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
rankall("heart attack","best")
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
source()
source()
submit()
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
submit()
submit()
submit()
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
source('~/Documents/DSL/datasciencecoursera/programming-in-r/wk4/rprog-data-ProgAssignment3-data/rankall.R')
swirl()
library("swirl", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
swirl()
ls()
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path(mytest3.R)
file.path("mytest3.R")
file.path("mytest3.R","folder1","folder2")
file.path("folder1","folder2")
?dir.create
dir.create("testdir2")
dir.create("testdir2","testdir3")
dir.create("testdir2","testdir3",recursive==TRUE)
dir.create(file.path("testdir2","testdir3"),recursive==TRUE)
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
unlink("testdir2")
unlink("testdir2",recursive=TRUE)
setwd()
setwd(getwd())
setwd(old.dir)
list.files()
unlink("testdir",recursive=TRUE)
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
swirl()
swirl()
class(cls_list)
as.character(cls_list)
?sapply
class(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flags,sum)
lapply(flags,sum,na.rm=TRUE)
lapply(sum,flags)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flags, mean)
sapply(flags_colors, mean)
sapply(flag_colors, mean)
out
flag_shapes <- flags[, 19:23]
lapply(flag_shapes,range)
shape_mat<-lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
lapply(flags,unique)
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals,function(elem) elem[2])
play()
swirl()
sapply(flags,unique)
vapply(flags,unique,numeric(1))
ok()
sapply(flags,class)
vapply(flags,unique,numeric(1))
vapply(flags,class,numeric(1))
vapply(flags,class,character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass,mean)
tapply(flags$population, flags$red,summary)
tapply(flags$population, flags$landmass,summary)
data(Cars)
data(cars)
??cars
?cars
head(cars)
plot(cars)
help(plot)
plot()
plot(cars$speed,cars$dist)
plot(cars$dist,cars$speed)
plot(x=cars$speed,y=cars$dist)
plot(x=cars$speed,y=cars$dist, xlab = "Speed")
plot(x=cars$speed,y=cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist, xlab = "Speed", ylab="Stopping Distance")
plot(x=cars$speed,y=cars$dist, xlab = "Speed", ylab="Stopping Distance",main="My Plot")
plot(x=cars$speed,y=cars$dist, main="My Plot")
plot(cars, main="My Plot")
plot(cars, main="My Plot", sub="My Plot Subtitle")
plot(cars, sub="My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim=c(10,15))
plot(cars, pch = 2)
data(mtcars)
help(boxplot)
boxplot(data=mtcars,mpg~ cyl)
boxplot(formula= mpg~ cyl, data=mtcars)
hist(mtcars$mpg)
ls()
class(plants)
dim(plants)
dim(plants)[1]
nrow(plants)
nrow(Cars)
nrow(cars)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants)
head(plants,10)
tail(plants,15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
x<-c(.18,-1.54,.42,.95)
w<-c(2,1,3,1)
x*2
x*w
sum(x*w)
which<-c(.01471,1.077,.0025,.3)
lapply(which,function(x) sum(w*(x-x)))
y<-x
lapply(which,function(x) sum(w*(y-x)^2))
lapply(which,function(x) paste(x,":",sum(w*(y-x)^2))
)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(x,y)
lm(y~x)
x-mean(x)
x<-x-mean(x)
y<-y-mean(y)
abline(0,beta)
plot(x,y) abline(0,beta)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y=0+x)
lm(y~0+x)
data(mtcars)
lm(mpg~weight)
lm(cars$mpg~cars$weight)
cars
mtcars
lm(mtcars$mpg~mtcars$weight)
lm(mtcars$mpg~mtcars$wt)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x<-(x-mean(x))/std(x)
x<-(x-mean(x))/stdev(x)
x<-(x-mean(x))/sdev(x)
std(x)
var(x)
x<-(x-mean(x))/var(x)
var(x)
norm
normalize
norm(x)
scale(x)
mean(scale(x))
var(scale(x))
x<-scale(X)
x<-scale(x)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x<-scale(x)
x
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lapply(which,function(x) paste(x,":",sum(w*(y-x)^2))
)
which<-c(0.573,.8,.36,44)
lapply(which,function(x) paste(x,":",sum(w*(y-x)^2)))
which<-c(0.573,.8,.36,.44)
y<-x
lapply(which,function(x) paste(x,":",sum(w*(y-x)^2)))
lapply(which,function(x) paste(x,":",(y-x)^2))
lapply(which,function(x) paste(x,":",sum((y-x)^2))
)
y<-rnorm(100)
x<-rnorm(100)
y<-scale(y)
x<-scale(x)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
lm(y~0+x)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
which<-c(0.1471,1.077,0.0025,0.300)
sapply(which, function(y) paste(y,":",w(y-mean(y))^2))
sapply(which, function(y) paste(y,":",w*(y-mean(y))^2))
mean(y)
y-mean(y)
y <- c(0.18, -1.54, 0.42, 0.95)
sapply(which, function(y) paste(y,":",w*(y-mean(y))^2))
y
yy-mean(y)
y-mean(y)
(y-mean(y))^2
w*(y-mean(y))^2
sum(w*(y-mean(y))^2)
sapply(which,function(x) sum(w*(y-mean(x))^2))
which<-c(1.077,0.300,0.0025,0.1471)
sapply(which,function(x) sum(w*(y-mean(x))^2))
cars
install.packages("RPostgreSQL")
setwd("~/Dropbox/DSL/Kaggle/bike-share")
